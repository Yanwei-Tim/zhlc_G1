<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context.xsd
		                http://www.springframework.org/schema/mvc
	                    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
						http://www.springframework.org/schema/tx
       					http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	                    http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop.xsd
	                    http://www.springframework.org/schema/task 
 						http://www.springframework.org/schema/task/spring-task-3.1.xsd">
	                    
	<!-- ====================== Begin 数据库配置  =======================-->

	<!-- 加载jdbc配置文件 
	<bean class="com.zhlc.common.utils.PlaceholderConfigurer" p:location="classpath:/config.properties" ignore-unresolvable="true"/>
	-->
	<!-- 
	<bean class="com.zhlc.common.utils.PlaceholderConfigurer">	
		<property name="locations">    
           <list>    
               <value>classpath:/config.properties</value>    
           </list>    
	    </property>
	</bean>
	 -->
	 
	<context:property-placeholder location="classpath:config/jdbc.properties" ignore-unresolvable="true" />
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="autoCommitOnClose" value="true" />
		<!--当连接池用完时客户端调用连接后等待获取新连接的时间，超时后将抛出SQLException，如设为0则无限期等待。单位毫秒。Default: 0 --> 
		<property name="checkoutTimeout" value="${cpool.checkoutTimeout}" />
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 --> 
		<property name="initialPoolSize" value="${cpool.initialPoolSize}" />
		<!--连接池中保留的最小连接数。-->  
		<property name="minPoolSize" value="${cpool.minPoolSize}" />
		<!--连接池中保留的最大连接数。Default: 15 -->  
		<property name="maxPoolSize" value="${cpool.maxPoolSize}" />
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->  
		<property name="maxIdleTime" value="${cpool.maxIdleTime}" />
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->  
		<property name="acquireIncrement" value="${cpool.acquireIncrement}" />
	</bean>
	
	<!-- ====================== End 数据库配置  =======================-->

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
 		<property name="dataSource" ref="dataSource"></property>
 	</bean>
 	
 	<!-- 通过AOP配置提供事务增强，让service包下所有Bean的所有方法拥有事务 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!--
			<tx:method name="add*" rollback-for="Exception,RuntimeException" read-only="false" propagation="REQUIRED"/>
			<tx:method name="save*" rollback-for="Exception,RuntimeException" read-only="false" propagation="REQUIRED"/>
			<tx:method name="delete*" rollback-for="Exception,RuntimeException" read-only="false" propagation="REQUIRED"/>
			<tx:method name="remove*" rollback-for="Exception,RuntimeException" read-only="false" propagation="REQUIRED"/>
			<tx:method name="update*" rollback-for="Exception,RuntimeException" read-only="false" propagation="REQUIRED"/>
			<tx:method name="*" read-only="false"/>
			-->
			<tx:method name="*" rollback-for="Exception,RuntimeException" read-only="false" propagation="REQUIRED" />
			
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="serviceMethod" expression="execution(* com.zhlc.app.service.*.*(..))"/>
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice"/>
	</aop:config>
	
	<!-- 配置Jdbc模板 
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    -->
    
	<!-- spring与myBatis文件整合	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>
